"""
Django settings for Backend project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os 
from decouple import config
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#fu#x72czciro(&dt0-*lxmj1ognxu!bkt60!a63ma@icc7&9)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
ENVIRONMENT = config('ENVIRONMENT', default='development')
POSTGRES_LOCALLY = config('POSTGRES_LOCALLY', default=False, cast=bool)
ALLOWED_HOSTS = ['127.0.0.1', 'localhost']

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST= 'smtp.gmail.com'
EMAIL_HOST_USER= config('EMAIL_ADDRESS')
EMAIL_HOST_PASSWORD= config('EMAIL_HOST_PASSWORD')
EMAIL_PORT=587
EMAIL_USE_TLS =True # TLS = transport layer security 
DEFAULT_FROM_EMAIL ='M-IOT'
ACCOUNT_EMAIL_SUBJECT_PREFIX =''



TENANT_MODEL = "tenants.Client"
TENANT_DOMAIN_MODEL = "tenants.Domain"
AUTH_USER_MODEL = "users.User"

SHARED_APPS = [
    "django_tenants",  # required      
    "django.contrib.contenttypes",
    "django.contrib.auth",
    'django.contrib.admin',
    "django.contrib.sessions",
    'django.contrib.messages' ,
    'django.contrib.staticfiles',
    "tenants", 
    "users",
    'django_extensions',
    'rest_framework',
]

AUTH_USER_MODEL = "users.User"
SHOW_PUBLIC_IF_NO_TENANT_FOUND = True

TENANT_APPS = [
    "django.contrib.contenttypes",
    "django.contrib.auth",
    'django.contrib.admin',
    "django.contrib.sessions",
    "users", 
    "captures",
    "alerts",
    "machines",
    "maintenance",
    "reports",
    "sites",
    "tickets",
    "ClientUsers",
]

INSTALLED_APPS = list(SHARED_APPS) + [app for app in TENANT_APPS if app not in SHARED_APPS]

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
    ], 
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication', # to continue use the django admin 
    ],
}


MIDDLEWARE = [
    'django_tenants.middleware.main.TenantMainMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]


#responsible for handling routing for a specific tenant
DATABASE_ROUTERS = (
    "django_tenants.routers.TenantSyncRouter",
)


ROOT_URLCONF = 'Backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django_tenants.postgresql_backend",
        "NAME": "miot_z6i3",
        "USER": "rofieda",
        "PASSWORD": "hI9bZhRSuGlFQvK0FsfrghlmPlRLR308",
        "HOST": "dpg-d28fhf15pdvs73di3nt0-a.oregon-postgres.render.com",
        "PORT": "5432",
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
